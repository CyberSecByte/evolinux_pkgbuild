pkgname=lib32-polly
rname=polly
pkgver=16.0.5
pkgrel=1
pkgdesc="High-level loop and data-locality optimizer and optimization infrastructure for LLVM"
arch=('x86_64')
url="https://polly.llvm.org/"
makedepends=('llvm' 'cmake' 'ninja' 'lib32-llvm' 'lib32-clang')
_source_base=https://github.com/llvm/llvm-project/releases/download/llvmorg-$pkgver
source=($_source_base/$rname-$pkgver.src.tar.xz
	$_source_base/cmake-$pkgver.src.tar.xz
	$_source_base/llvm-$pkgver.src.tar.xz)

prepare() {
	mv cmake{-$pkgver.src,}

	cd "$srcdir/$rname-$pkgver.src"
	mkdir build
}

build() {
	cd "$srcdir/$rname-$pkgver.src/build"

	CFLAGS+=' -ffat-lto-objects'
	CXXFLAGS+=' -ffat-lto-objects'

	export CC="gcc -m32"
	export CXX="g++ -m32"
	export PKG_CONFIG="i686-pc-linux-gnu-pkg-config"

	cmake .. -G Ninja \
	-D CMAKE_BUILD_TYPE=Release \
	-D CMAKE_INSTALL_PREFIX=/usr \
	-D LLVM_LIBDIR_SUFFIX=32 \
	-D CMAKE_C_FLAGS:STRING=-m32 \
	-D CMAKE_CXX_FLAGS:STRING=-m32 \
	-D LLVM_TARGET_ARCH:STRING=i686 \
	-D LLVM_HOST_TRIPLE=$CHOST \
	-D LLVM_DEFAULT_TARGETS_TRIPLE="i686-pc-linux-gnu" \
	-D LLVM_LINK_LLVM_DYLIB=ON \
	-D LLVM_BUILD_TESTS=OFF \
	-D LLVM_INCLUDE_BENCHMARKS=OFF \
	-D LLVM_BUILD_DOCS=OFF \
	-D LLVM_ENABLE_SPHINX=OFF \
	-D SPHINX_WARNINGS_AS_ERRORS=OFF \
	-D LLVM_EXTERNAL_LIT=/usr/bin/lit \
	-D LLVM_BUILD_MAIN_SRC_DIR="$srcdir/llvm-$pkgver.src"

	ninja
}

package() {
	cd "$srcdir/$rname-$pkgver.src/build"

	DESTDIR="$pkgdir" ninja install

	rm -rf $pkgdir/usr/{bin.sbin,include,share}
}
