pkgname=darling
# Versioning will be in date ( tarcked by when commit was made )
pkgver=2023.08.28
pkgrel=1
arch=(x86_64)
commitid=a12ec5d2bc10fab280e1e6f564ff3b00a3e7c6bc
url=https://github.com/darlinghq/darling.git
source=(git+https://github.com/darlinghq/darling.git#commit=$commitid)
options=("!buildflags")
depends=(
	cmake clang flex bison icu gcc 
	fontconfig cairo libtiff python2 mesa llvm libbsd libxkbfile 
	libxcursor libxext libxkbcommon libxrandr ffmpeg
	xz fuse2 libxml2 icu openssl bzip2 zlib systemd
	wget curl ruby3 sed libarchive file python3 gawk libunwind

	# lib32
	lib32-clang lib32-bzip2 lib32-systemd lib32-libxslt libpng cairo libtiff glu libbsd python2)
makedepends=(
	git pkgconf python2
)

prepare() {
	# Delete old darling build dir if present somehow
	rm -rf darling/build

	cd darling

	# Fix the broken origin for submodule sync
	git remote remove origin
	git remote add origin $url

	# Clean up master branch things
	# rm -rf */ * .{gitmodules,gitignore,gdbinit}

	# Checkout specific commit ( chosen to be built )
	git reset --hard $commitid

	# make build dir
	mkdir -p build

	# update and init submodules
	git submodule init

	# re-init and update/clone the submodules
	git submodule update --init --recursive

	# Reset to base commit that we cloned spcifically
	git submodule foreach --recursive git reset --hard

	cd build

	# Configure the project
	echo "Running cmake."
	cmake \
	-G Ninja \
	-D CMAKE_BUILD_TYPE=Debug \
	-D CMAKE_INSTALL_PREFIX=/usr \
	-D ENABLE_TESTS=0 \
	-D CMAKE_POSITION_INDEPENDENT_CODE=OFF \
	-D JSC_UNIFIED_BUILD=ON \
	-D ADDITIONAL_PACKAGES=ON \
	-D REGENERATE_SDK=ON \
	-D COMPILE_PY2_BYTECODE=ON \
	-D BUILD_METAL=ON \
	-D TARGET_i386=ON \
	..
}

build() {
	cd darling/build

	cmake \
	-G Ninja \
	-D CMAKE_BUILD_TYPE=Debug \
	-D CMAKE_INSTALL_PREFIX=/usr \
	-D ENABLE_TESTS=0 \
	-D CMAKE_POSITION_INDEPENDENT_CODE=OFF \
	-D JSC_UNIFIED_BUILD=ON \
	-D ADDITIONAL_PACKAGES=ON \
	-D REGENERATE_SDK=ON \
	-D COMPILE_PY2_BYTECODE=ON \
	-D BUILD_METAL=ON \
	-D TARGET_i386=ON \
	..

	echo "Running ninja."
	ninja
}

package() {
	cd darling/build

	DESTDIR="$pkgdir" ninja install
}
