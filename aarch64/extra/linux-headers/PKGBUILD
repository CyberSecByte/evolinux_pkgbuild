pkgname=linux-headers
pkgver=5.17.8
pkgrel=1
pkgdesc='Linux Headers'
arch=('aarch64')
options=('!strip' 'emptydirs')
makedepends=(rsync)
source=(https://github.com/Drunk-Linux/Linux/archive/refs/heads/$pkgver-drunk.tar.gz)

# Deprecated as we ship modules/headers in 1 pkg now
replaces=(linux-api-headers)

export KBUILD_BUILD_HOST=drunk-linux
export KBUILD_BUILD_USER=$pkgname
export KBUILD_BUILD_TIMESTAMP="$(date -Ru${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH})"

prepare() {
	cd Linux-$pkgver-drunk

	echo "[!]: Cleaning src base"
	make clean

	echo "[!]: Running mrproper"
	make mrproper
}

build() {
	cd Linux-$pkgver-drunk

	echo "[!]: Making headers"
	make headers -j7
}

package() {
	pkgdesc="Modules and headers package"

        cd Linux-$pkgver-drunk

	mkdir -p $pkgdir/boot

	echo "[!]: Installing build files..."
	local builddir="$pkgdir/lib/modules/$pkgver-drunk/build"

	install -Dt "$builddir/kernel" -m644 kernel/Makefile
	install -Dt "$builddir/arch/arm64" -m644 arch/arm64/Makefile
	cp -t "$builddir" -a scripts

	# add xfs and shmem for aufs building
	mkdir -p "$builddir"/{fs/xfs,mm}

	echo "[!]: Installing headers"
	cp -t "$builddir" -a include
	cp -t "$builddir/arch/arm64" -a arch/arm64/include

	install -Dt "$builddir/drivers/md" -m644 drivers/md/*.h
	install -Dt "$builddir/net/mac80211" -m644 net/mac80211/*.h

	install -Dt "$builddir/drivers/media/i2c" -m644 drivers/media/i2c/msp3400-driver.h

	install -Dt "$builddir/drivers/media/usb/dvb-usb" -m644 drivers/media/usb/dvb-usb/*.h
	install -Dt "$builddir/drivers/media/dvb-frontends" -m644 drivers/media/dvb-frontends/*.h
	install -Dt "$builddir/drivers/media/tuners" -m644 drivers/media/tuners/*.h

	install -Dt "$builddir/drivers/iio/common/hid-sensors" -m644 drivers/iio/common/hid-sensors/*.h

	# Also insall with make ( Just to be sure that headers match with kernel )
	make headers_install INSTALL_HDR_PATH=$pkgdir/usr

	echo "[!]: Installing KConfig files"
	find . -name 'Kconfig*' -exec install -Dm644 {} "$builddir/{}" \;

	echo "[!]: Removing unneeded architectures"
	local arch
	for arch in "$builddir"/arch/*/; do
		[[ $arch = */arm64/ ]] && continue
		echo "Removing $(basename "$arch")"
		rm -r "$arch"
	done

	echo "[!]: Removing documentation"
	rm -r "$builddir/Documentation"

	echo "[!]: Removing broken symlinks"
	find -L "$builddir" -type l -printf 'Removing %P\n' -delete

	echo "[!]: Adding src symlink to /usr/src/linux"
	mkdir -p "$pkgdir/usr/src"
	ln -sr "$builddir" "$pkgdir/usr/src/linux"
}
